name: Deploy Docker

# Run workflow on tags starting with v (eg. v2, v1.2.0)
on: workflow_dispatch

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      
      - name: Create an issue
        uses: JasonEtco/create-an-issue@v2.6.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENVIRONMENT: Dev
          RUNNUMBER: ${{ github.run_number  }}
        with:         
          filename: .github/deployment-approval.md
          
  parse:
    needs: [Deploy]
    #if: ${{ !github.event.issue.pull_request && github.event.comment.body == 'Approved' }}
    runs-on: ubuntu-latest
    outputs:
      deploy-environment: ${{ fromJSON(steps.issue_body_parser.outputs.payload).environment }}
      ci-run-number: ${{ fromJSON(steps.issue_body_parser.outputs.payload).runNumber }}
    steps:
      - name: Comment on Issue      
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: 'Deployment Initiated ðŸš€'
          
      - name: Get Issue Data
        uses: peter-murray/issue-body-parser-action@v1
        id: issue_body_parser
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          issue_id: ${{ github.event.issue.number }}         
          payload_marker: target_payload 

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_TOKEN }}
          
  deploy-dev:
    needs: [parse]
    if: ${{ needs.parse.outputs.deploy-environment == 'Dev' }}
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2 
      
      - name: Deploy to DEV
        run: echo Simulating Deployment    
          
      - uses: JasonEtco/create-an-issue@v2
        name: Create approval Issue for Prod
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENVIRONMENT: Prod
          RUNNUMBER: ${{ needs.parse.outputs.ci-run-number }}
        with:
          filename: .github/deployment-approval.md
      
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          push: true # Will only build if this is not here
          tags: |
            ghcr.io/${{ github.repository }}:${{github.run_number}}
           
      #- name: run docker and push
        #run: |
         # docker build -f ./Dockerfile . -t test:${{github.run_number}} --build-arg NODE_AUTH_TOKEN=$NODE_AUTH_TOKEN
         # docker tag test:${{github.run_number}} ghcr.io/ghcr-install/test:${{github.run_number}}
         # docker push ghcr.io/ghcr-install/test:${{github.run_number}}
        #shell: bash
          
      - name: list image
        run: |
          docker image ls -a
        shell: bash
        
      #- name: Delete image
       # uses: bots-house/ghcr-delete-image-action@v1.0.0
       # with:
       #   # NOTE: at now only orgs is supported
       #   owner: bots-house
       #   name: some-web-service
       #   # NOTE: using Personal Access Token
       #   token: ${{ secrets.REGISTRY_TOKEN }}
       #   tag: ghcr.io/${{ github.repository }}:${{github.run_number}}
          
      #- name: Prune
       # uses: vlaurin/action-ghcr-prune@main
       # with:
       #   token: ${{ secrets.REGISTRY_TOKEN }}
       #   #organization: your-org
       #   container: ghcr.io/${{ github.repository }}
       #   dry-run: true # Dry-run first, then change to `false`
       #   older-than: 0 # days
       #   keep-last: 1
       #   untagged: true
